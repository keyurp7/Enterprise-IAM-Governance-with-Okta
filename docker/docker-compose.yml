version: '3.8'

services:
  iam-platform:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://iam_user:iam_password@postgres:5432/iam_platform
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - iam_logs:/app/logs
      - iam_data:/app/data
    networks:
      - iam_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=iam_platform
      - POSTGRES_USER=iam_user
      - POSTGRES_PASSWORD=iam_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iam_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iam_user -d iam_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - iam_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - iam-platform
    networks:
      - iam_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  iam_logs:
  iam_data:

networks:
  iam_network:
    driver: bridge